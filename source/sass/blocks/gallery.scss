// .gallery {}

.gallery__lead {
  @media (max-width: $width-max-mobile) {
    padding-top: 44px;
    padding-bottom: 50px;

    & > br {
      display: none;
    }
  }

  @media (min-width: $width-tablet) {
    padding-top: 92px;
    padding-bottom: 76px;
  }

  @media (min-width: $width-desktop) {
    padding-top: 92px;
    padding-bottom: 88px;
  }
}

.gallery__list-wrapper {
  position: relative;
}

.gallery__list {
  display: grid;
  gap: 20px;
  margin: 0 auto;
  padding: 0;
  list-style-type: none;

  @include adaptiveWidth();

  @media (min-width: $width-tablet) {
    grid-template-columns: 1fr 1fr;
  }

  @media (min-width: $width-desktop) {
    grid-template-columns: repeat(3, 1fr);
    row-gap: 52px;
  }
}

.gallery__item {
  &--large {
    @media (min-width: $width-tablet) {
      // В планшете дооформляем 50px макетного отступа для первой фотокарточки
      // где: margin-bottom: 30px + row-gap: 20px;
      margin-bottom: 30px;
      grid-column: 1 / -1;
    }

    @media (min-width: $width-desktop) {
      margin-bottom: 0;
    }
  }

  // #region Позиционирование лейбла-псевдоэлемента
  // Поскольку широкая (первая) иллюстрация уже абсолютно спозиционирована относительно обертки,
  // мы уже не можем данный лейбл спозиционировать относительно илюстрации, поэтому позиционируем его
  // также относительно всей обертки, а правый отступ расчитывается по формуле.
  // #endregion

  &--large::before {
    content: "ПАНОРАМА ДНЯ";
    position: absolute;
    top: 0;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 140px;
    height: 36px;
    font-size: 12px;
    font-weight: 700;
    color: $color-white;
    background-color: $color-secondary;

    @media (max-width: $width-max-mobile) {
      right: calc((100vw - $width-mobile) / 2 + $width-mobile-padding);
    }

    @media (min-width: $width-tablet) {
      top: 57px;
      right: calc((100vw - $width-tablet) / 2 + $width-tablet-padding);
    }

    @media (min-width: $width-desktop) {
      top: 54px;
      right: calc((100vw - $width-desktop) / 2 + $width-desktop-padding);
    }
  }
}

.gallery__card {
  display: flex;
  flex-direction: column;
  height: 100%;
  padding-bottom: 19px;
  background-color: $color-canvas;

  @media (min-width: $width-tablet) {
    min-height: 455px;
    padding-bottom: 24px;
  }

  @media (min-width: $width-desktop) {
    min-height: 555px;
    padding-bottom: 23px;
  }

  // Первая (широкая) фотокарточка
  .gallery__item--large & {
    @media (max-width: $width-max-mobile) {

      // #region Расчет верхнего паддинга
      // Для расчета высоты (h) изображения при увеличении его ширины на 1px можно использовать пропорцию, основанную на соотношении сторон изображения. Соотношение сторон изображения - это отношение ширины к высоте. В случае данного изображения это будет: 320 / 137 = 2.336 Это означает, что каждый пиксель ширины соответствует 2.336 пикселям высоты. Чтобы рассчитать высоту при увеличении ширины на 1px, мы можем использовать следующую формулу: h=(w + 1) / 2.336 Где w - новая ширина изображения после увеличения на 1px. Таким образом, если увеличить ширину изображения с 320px до 321px, то новая высота будет: h=(321 / 2.336)=137.25px Из-за того, что пиксели - это дискретные единицы измерения, мы не можем получить точную высоту в дробных пикселях. В этом случае мы можем округлить ответ до ближайшего целого числа. Таким образом, новая высота будет округлена до 137px.
      // #endregion

      // 137px + 18px (высота фото + нижний маргин от фото)
      // (100vw - $width-mobile) / 2.336 - величина на которую увеличиваем верхний отступ под пропорционально увеличиваемом абсолютно спозиционированным фото

      padding-top: max(155px, calc((100vw - $width-mobile) / 2.34 + 137px + 18px));
    }

    @media (min-width: $width-tablet) {
      flex-direction: row;
      flex-wrap: wrap;
      // 509px + 23px (высота фото + нижний маргин от фото)
      padding-top: (509px + 23px);
    }

    @media (min-width: $width-desktop) {
      // 506px + 24px (высота фото + нижний маргин от фото)
      padding-top: (506px + 23px);
    }
  }
}

.gallery__card-image {
  display: block;
  width: 100%;
  margin-bottom: 17px;

  @media (min-width: $width-tablet) {
    height: 300px;
    margin-bottom: 23px;
  }

  @media (min-width: $width-desktop) {
    height: 400px;
    margin-bottom: 24px;
  }

  .gallery__item--large & {
    position: absolute;
    top: 0;
    left: 0;

    @media (min-width: $width-tablet) {
      height: 509px;
    }

    @media (min-width: $width-desktop) {
      height: 506px;
    }
  }
}

.gallery__card-footer,
.gallery__card-describe,
.gallery__card-likes {
  padding: 0 17px;

  @media (min-width: $width-tablet) {
    padding: 0 30px;
  }

  @media (min-width: $width-desktop) {
    padding: 0 27px;
  }
}

.gallery__card-name {
  font-weight: 700;
}

.gallery__card-date {
  font-size: 12px;
  font-weight: 300;
  text-transform: uppercase;
}

// Описание фото авторское
.gallery__card-describe {
  margin: 0;
  margin-bottom: 11px;

  @media (min-width: $width-tablet) {
    margin-bottom: 12px;
  }

  // Описание под фото #1
  .gallery__item--large & {
    @media (min-width: $width-tablet) {
      flex-grow: 1;
      order: 3;
    }

    @media (min-width: $width-tablet) {
      margin-bottom: 0;
    }
  }
}

// Параграф с лайками
.gallery__card-likes {
  display: flex;
  align-items: center;
  column-gap: 18px;
  margin: 0;
  margin-top: auto;

  @media (min-width: $width-tablet) {
    flex-direction: row-reverse;
    justify-content: space-between;
  }

  // Лайки под фото #1
  .gallery__item--large & {
    @media (min-width: $width-tablet) {
      margin-left: auto;
    }
  }
}

// Количество лайков
.gallery__card-likes-info {
  order: 2;
  color: $color-secondary;
  font-size: 12px;
  font-weight: 400;
  text-transform: uppercase;
}

// Кнопка лайка
.gallery__card-likes-button {
  padding: 0;
  border: 0;
  width: 13px;
  height: 12px;
  background-color: transparent;
  background-image: url("../img/ico/heart.svg");
  background-repeat: no-repeat;

  &:hover {
    cursor: pointer;
  }
}
